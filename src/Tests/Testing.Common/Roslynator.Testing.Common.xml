<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Roslynator.Testing.Common</name>
    </assembly>
    <members>
        <member name="T:Roslynator.Testing.CodeVerificationOptions">
            <summary>
            Represents a set of options for code verifications.
            </summary>
        </member>
        <member name="M:Roslynator.Testing.CodeVerificationOptions.#ctor(System.Collections.Generic.IEnumerable{System.String},Microsoft.CodeAnalysis.DiagnosticSeverity,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of <see cref="T:Roslynator.Testing.CodeVerificationOptions"/>.
            </summary>
            <param name="assemblyNames"></param>
            <param name="allowedCompilerDiagnosticSeverity"></param>
            <param name="allowedCompilerDiagnosticIds"></param>
        </member>
        <member name="P:Roslynator.Testing.CodeVerificationOptions.CommonParseOptions">
            <summary>
            Gets a common parse options.
            </summary>
        </member>
        <member name="P:Roslynator.Testing.CodeVerificationOptions.CommonCompilationOptions">
            <summary>
            Gets a common compilation options.
            </summary>
        </member>
        <member name="P:Roslynator.Testing.CodeVerificationOptions.ParseOptions">
            <summary>
            Gets a parse options that should be used to parse tested source code.
            </summary>
        </member>
        <member name="P:Roslynator.Testing.CodeVerificationOptions.CompilationOptions">
            <summary>
            Gets a compilation options that should be used to compile test project.
            </summary>
        </member>
        <member name="P:Roslynator.Testing.CodeVerificationOptions.AssemblyNames">
            <summary>
            Gets a list of assemblies that should be used to compile test project. Assembly name should be in a format "MyAseembly.dll".
            </summary>
        </member>
        <member name="P:Roslynator.Testing.CodeVerificationOptions.AllowedCompilerDiagnosticSeverity">
            <summary>
            Gets a diagnostic severity that is allowed. Default value is <see cref="F:Microsoft.CodeAnalysis.DiagnosticSeverity.Info"/>
            which means that compiler diagnostics with severity <see cref="F:Microsoft.CodeAnalysis.DiagnosticSeverity.Hidden"/>
            and <see cref="F:Microsoft.CodeAnalysis.DiagnosticSeverity.Info"/> are allowed.
            </summary>
        </member>
        <member name="P:Roslynator.Testing.CodeVerificationOptions.AllowedCompilerDiagnosticIds">
            <summary>
            Gets a list of compiler diagnostic IDs that are allowed.
            </summary>
        </member>
        <member name="T:Roslynator.Testing.CodeVerifier">
            <summary>
            Represents base type for verifying diagnostics, code fixes and refactorings.
            </summary>
        </member>
        <member name="P:Roslynator.Testing.CodeVerifier.CommonOptions">
            <summary>
            Gets a common code verification options.
            </summary>
        </member>
        <member name="P:Roslynator.Testing.CodeVerifier.Options">
            <summary>
            Gets a code verification options.
            </summary>
        </member>
        <member name="P:Roslynator.Testing.CodeVerifier.Assert">
            <summary>
            Gets a test assertions.
            </summary>
        </member>
        <member name="T:Roslynator.Testing.CompilerDiagnosticFixVerifier">
            <summary>
            Represents a verifier for compiler diagnostics (i.e CS1234 for C#).
            </summary>
        </member>
        <member name="P:Roslynator.Testing.CompilerDiagnosticFixVerifier.DiagnosticId">
            <summary>
            Gets an ID of a diagnostic to verify.
            </summary>
        </member>
        <member name="P:Roslynator.Testing.CompilerDiagnosticFixVerifier.FixProvider">
            <summary>
            Gets an <see cref="T:Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider"/> that should fix a diagnostic.
            </summary>
        </member>
        <member name="M:Roslynator.Testing.CompilerDiagnosticFixVerifier.VerifyFixAsync(System.String,System.String,System.String,System.String,System.String,Roslynator.Testing.CodeVerificationOptions,System.Threading.CancellationToken)">
            <summary>
            Verifies that specified source will produce compiler diagnostic with ID specified in <see cref="P:Roslynator.Testing.CompilerDiagnosticFixVerifier.DiagnosticId"/>.
            </summary>
            <param name="source">Source text that contains placeholder [||] to be replaced with <paramref name="sourceData"/> and <paramref name="expectedData"/>.</param>
            <param name="sourceData"></param>
            <param name="expectedData"></param>
            <param name="title">Code action's title.</param>
            <param name="equivalenceKey">Code action's equivalence key.</param>
            <param name="options"></param>
            <param name="cancellationToken"></param>
        </member>
        <member name="M:Roslynator.Testing.CompilerDiagnosticFixVerifier.VerifyFixAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}},System.String,System.String,Roslynator.Testing.CodeVerificationOptions,System.Threading.CancellationToken)">
            <summary>
            Verifies that specified source will produce compiler diagnostic with ID specified in <see cref="P:Roslynator.Testing.CompilerDiagnosticFixVerifier.DiagnosticId"/>.
            </summary>
            <param name="source">A source code that should be tested. Tokens [| and |] represents start and end of selection respectively.</param>
            <param name="expected"></param>
            <param name="additionalData"></param>
            <param name="title">Code action's title.</param>
            <param name="equivalenceKey">Code action's equivalence key.</param>
            <param name="options"></param>
            <param name="cancellationToken"></param>
        </member>
        <member name="M:Roslynator.Testing.CompilerDiagnosticFixVerifier.VerifyNoFixAsync(System.String,System.String,Roslynator.Testing.CodeVerificationOptions,System.Threading.CancellationToken)">
            <summary>
            Verifies that specified source will not produce compiler diagnostic with ID specified in <see cref="P:Roslynator.Testing.CompilerDiagnosticFixVerifier.DiagnosticId"/>.
            </summary>
            <param name="source">A source code that should be tested. Tokens [| and |] represents start and end of selection respectively.</param>
            <param name="equivalenceKey">Code action's equivalence key.</param>
            <param name="options"></param>
            <param name="cancellationToken"></param>
        </member>
        <member name="T:Roslynator.Testing.DiagnosticVerifier">
            <summary>
            Represents verifier for a diagnostic that is produced by <see cref="T:Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer"/>.
            </summary>
        </member>
        <member name="P:Roslynator.Testing.DiagnosticVerifier.Descriptor">
            <summary>
            Gets a <see cref="T:Microsoft.CodeAnalysis.DiagnosticDescriptor"/> that describes diagnostic that should be verified.
            </summary>
        </member>
        <member name="P:Roslynator.Testing.DiagnosticVerifier.Analyzer">
            <summary>
            Gets an analyzer that can produce a diagnostic that should be verified.
            </summary>
        </member>
        <member name="P:Roslynator.Testing.DiagnosticVerifier.AdditionalAnalyzers">
            <summary>
            Gets a collection of additional analyzers that can produce a diagnostic that should be verified.
            Override this property if a diagnostic that should be verified can be produced by more than one analyzer.
            </summary>
        </member>
        <member name="P:Roslynator.Testing.DiagnosticVerifier.Analyzers">
            <summary>
            A collection of analyzers that can produce a diagnostic that should be verified.
            </summary>
        </member>
        <member name="M:Roslynator.Testing.DiagnosticVerifier.VerifyDiagnosticAsync(System.String,Roslynator.Testing.CodeVerificationOptions,System.Threading.CancellationToken)">
            <summary>
            Verifies that specified source will produce diagnostic described with see <see cref="P:Roslynator.Testing.DiagnosticVerifier.Descriptor"/>
            </summary>
            <param name="source">A source code that should be tested. Tokens [| and |] represents start and end of selection respectively.</param>
            <param name="options"></param>
            <param name="cancellationToken"></param>
        </member>
        <member name="M:Roslynator.Testing.DiagnosticVerifier.VerifyDiagnosticAsync(System.String,System.String,Roslynator.Testing.CodeVerificationOptions,System.Threading.CancellationToken)">
            <summary>
            Verifies that specified source will produce diagnostic described with see <see cref="P:Roslynator.Testing.DiagnosticVerifier.Descriptor"/>
            </summary>
            <param name="source">Source text that contains placeholder [||] to be replaced with <paramref name="sourceData"/>.</param>
            <param name="sourceData"></param>
            <param name="options"></param>
            <param name="cancellationToken"></param>
        </member>
        <member name="M:Roslynator.Testing.DiagnosticVerifier.UpdateCompilation(Microsoft.CodeAnalysis.Compilation)">
            <summary>
            Updates compilation that will be used during verification.
            </summary>
            <param name="compilation"></param>
        </member>
        <member name="M:Roslynator.Testing.DiagnosticVerifier.VerifyNoDiagnosticAsync(System.String,System.String,Roslynator.Testing.CodeVerificationOptions,System.Threading.CancellationToken)">
            <summary>
            Verifies that specified source will not produce diagnostic described with see <see cref="P:Roslynator.Testing.DiagnosticVerifier.Descriptor"/>
            </summary>
            <param name="source">Source text that contains placeholder [||] to be replaced with <paramref name="sourceData"/>.</param>
            <param name="sourceData"></param>
            <param name="options"></param>
            <param name="cancellationToken"></param>
        </member>
        <member name="M:Roslynator.Testing.DiagnosticVerifier.VerifyNoDiagnosticAsync(System.String,System.Collections.Generic.IEnumerable{System.String},Roslynator.Testing.CodeVerificationOptions,System.Threading.CancellationToken)">
            <summary>
            Verifies that specified source will not produce diagnostic described with see <see cref="P:Roslynator.Testing.DiagnosticVerifier.Descriptor"/>
            </summary>
            <param name="source">A source code that should be tested. Tokens [| and |] represents start and end of selection respectively.</param>
            <param name="additionalSources"></param>
            <param name="options"></param>
            <param name="cancellationToken"></param>
        </member>
        <member name="T:Roslynator.Testing.FixVerifier">
            <summary>
            Represents verifier for a diagnostic produced by <see cref="T:Microsoft.CodeAnalysis.Diagnostics.DiagnosticAnalyzer"/> and a code fix provided by <see cref="T:Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider"/>.
            </summary>
        </member>
        <member name="P:Roslynator.Testing.FixVerifier.FixProvider">
            <summary>
            Gets a <see cref="T:Microsoft.CodeAnalysis.CodeFixes.CodeFixProvider"/> that can fix specified diagnostic.
            </summary>
        </member>
        <member name="M:Roslynator.Testing.FixVerifier.VerifyDiagnosticAndFixAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}},System.String,System.String,Roslynator.Testing.CodeVerificationOptions,System.Threading.CancellationToken)">
            <summary>
            Verifies that specified source will produce diagnostic and that the diagnostic will be fixed with the <see cref="P:Roslynator.Testing.FixVerifier.FixProvider"/>.
            </summary>
            <param name="source">A source code that should be tested. Tokens [| and |] represents start and end of selection respectively.</param>
            <param name="expected"></param>
            <param name="additionalData"></param>
            <param name="title">Code action's title.</param>
            <param name="equivalenceKey">Code action's equivalence key.</param>
            <param name="options"></param>
            <param name="cancellationToken"></param>
        </member>
        <member name="M:Roslynator.Testing.FixVerifier.VerifyDiagnosticAndNoFixAsync(System.String,System.Collections.Generic.IEnumerable{System.ValueTuple{System.String,System.String}},System.String,Roslynator.Testing.CodeVerificationOptions,System.Threading.CancellationToken)">
            <summary>
            Verifies that specified source will produce diagnostic and that the diagnostic will not be fixed with the <see cref="P:Roslynator.Testing.FixVerifier.FixProvider"/>.
            </summary>
            <param name="source">A source code that should be tested. Tokens [| and |] represents start and end of selection respectively.</param>
            <param name="additionalData"></param>
            <param name="equivalenceKey">Code action's equivalence key.</param>
            <param name="options"></param>
            <param name="cancellationToken"></param>
        </member>
        <member name="M:Roslynator.Testing.FixVerifier.VerifyDiagnosticAndFixAsync(System.String,System.String,System.String,System.String,System.String,Roslynator.Testing.CodeVerificationOptions,System.Threading.CancellationToken)">
            <summary>
            Verifies that specified source will produce diagnostic and that the diagnostic will be fixed with the <see cref="P:Roslynator.Testing.FixVerifier.FixProvider"/>.
            </summary>
            <param name="source">Source text that contains placeholder [||] to be replaced with <paramref name="sourceData"/> and <paramref name="expectedData"/>.</param>
            <param name="sourceData"></param>
            <param name="expectedData"></param>
            <param name="title">Code action's title.</param>
            <param name="equivalenceKey">Code action's equivalence key.</param>
            <param name="options"></param>
            <param name="cancellationToken"></param>
        </member>
        <member name="M:Roslynator.Testing.FixVerifier.VerifyNoFixAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.String,Roslynator.Testing.CodeVerificationOptions,System.Threading.CancellationToken)">
            <summary>
            Verifies that specified source does not contains diagnostic that can be fixed with the <see cref="P:Roslynator.Testing.FixVerifier.FixProvider"/>.
            </summary>
            <param name="source">A source code that should be tested. Tokens [| and |] represents start and end of selection respectively.</param>
            <param name="additionalSources"></param>
            <param name="equivalenceKey">Code action's equivalence key.</param>
            <param name="options"></param>
            <param name="cancellationToken"></param>
        </member>
        <member name="T:Roslynator.Testing.IAssert">
            <summary>
            Represents an abstraction for test assertions.
            </summary>
        </member>
        <member name="M:Roslynator.Testing.IAssert.Equal(System.String,System.String)">
            <summary>
            Compares specified values and throws error if they are not equal.
            </summary>
            <param name="expected"></param>
            <param name="actual"></param>
        </member>
        <member name="M:Roslynator.Testing.IAssert.True(System.Boolean,System.String)">
            <summary>
            Throws an error if a condition is not equal to <c>true</c>.
            </summary>
            <param name="condition"></param>
            <param name="userMessage"></param>
        </member>
        <member name="T:Roslynator.Testing.RefactoringVerifier">
            <summary>
            Represents verifier for a refactoring that is provided by <see cref="P:Roslynator.Testing.RefactoringVerifier.RefactoringProvider"/>
            </summary>
        </member>
        <member name="P:Roslynator.Testing.RefactoringVerifier.RefactoringId">
            <summary>
            ID of a refactoring that should be applied.
            </summary>
        </member>
        <member name="P:Roslynator.Testing.RefactoringVerifier.RefactoringProvider">
            <summary>
            <see cref="T:Microsoft.CodeAnalysis.CodeRefactorings.CodeRefactoringProvider"/> that provides a refactoring that should be applied.
            </summary>
        </member>
        <member name="M:Roslynator.Testing.RefactoringVerifier.VerifyRefactoringAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.String,Roslynator.Testing.CodeVerificationOptions,System.Threading.CancellationToken)">
            <summary>
            Verifies that a refactoring can be applied on a specified source code.
            </summary>
            <param name="source">A source code that should be tested. Tokens [| and |] represents start and end of selection respectively.</param>
            <param name="expected"></param>
            <param name="additionalSources"></param>
            <param name="title">Code action's title.</param>
            <param name="equivalenceKey">Code action's equivalence key.</param>
            <param name="options"></param>
            <param name="cancellationToken"></param>
        </member>
        <member name="M:Roslynator.Testing.RefactoringVerifier.VerifyRefactoringAsync(System.String,System.String,System.String,System.String,System.String,Roslynator.Testing.CodeVerificationOptions,System.Threading.CancellationToken)">
            <summary>
            Verifies that a refactoring can be applied on a specified source code.
            </summary>
            <param name="source">Source text that contains placeholder [||] to be replaced with <paramref name="sourceData"/> and <paramref name="expectedData"/>.</param>
            <param name="sourceData"></param>
            <param name="expectedData"></param>
            <param name="title">Code action's title.</param>
            <param name="equivalenceKey">Code action's equivalence key.</param>
            <param name="options"></param>
            <param name="cancellationToken"></param>
        </member>
        <member name="M:Roslynator.Testing.RefactoringVerifier.VerifyNoRefactoringAsync(System.String,System.String,Roslynator.Testing.CodeVerificationOptions,System.Threading.CancellationToken)">
            <summary>
            Verifies that a refactoring cannot be applied on a specified source code.
            </summary>
            <param name="source">A source code that should be tested. Tokens [| and |] represents start and end of selection respectively.</param>
            <param name="equivalenceKey">Code action's equivalence key.</param>
            <param name="options"></param>
            <param name="cancellationToken"></param>
        </member>
    </members>
</doc>
